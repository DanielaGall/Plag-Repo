 * /PlagiarismGuard/ - these are the standard Django files used to configure and power the application.
 * /util/ - as covered a little above, these are a set of 'utilities' which perform the bulk of the plagiarism detection work.
A further write-up of this project is available [on my personal site]https://github.com/DanielaGall/Plag-Repo/new/master
## Installing/running
This project can extract text (to check for plagiarism) from many file types, including .pdf and the old (non XML) Word .doc format. For these two formats, the following utilities were used:

 * `pdftotext` which can be installed by `yum install poppler-utils` on Unix systems, whilst the .exe called `xpdfbin-win-3.04.zip` can be found online and installed for Windows.
 * `antiword` which can be installed [from winfield](http://www.winfield.demon.nl/#Programmer){:target="_blank"} for Unix based systems (the Windows source for it worked in 2014 but it now returns a 404).
 
Once the relevant dependencies are installed and Django is running, you will be able to add resources to protect/scan via the Django admin panel (or manually via SQL commands, of course) - and then the management commands can be triggered (manually or via a cron) to scan them and get the results.
 
